<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>